<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>